<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>